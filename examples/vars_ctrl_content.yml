# Ansible Automation Platform controller configuration - content

aap_configuration_secure_logging: false
controller_configuration_organizations_secure_logging: false
controller_configuration_credential_types_secure_logging: false
controller_configuration_credentials_secure_logging: false
controller_configuration_execution_environments_secure_logging: false
controller_configuration_projects_secure_logging: false
controller_configuration_inventories_secure_logging: false

aap_organizations:
  - name: Test Org
    description: Test organization
    max_hosts: 10
    instance_groups:
      - default
    default_environment: Custom Base EE
    # NB. At least one credential needs to be
    #     defined if downloading collections.
#    galaxy_credentials:
#      - Automation Hub RH Certified Repository
#      - Automation Hub Validated Repository
#      - Automation Hub Community Repository
#      - Automation Hub Published Repository

controller_credential_types:
  - name: Kerberos
    inputs:
      fields:
        - id: username
          type: string
          label: Username
        - id: password
          type: string
          label: Password
          secret: true
        - id: default_realm
          type: string
          label: Default Realm
        - id: kdc
          type: string
          label: KDC
          help_text: Optional KDC, use only if KDC DNS lookup not working
      required:
        - username
        - password
        - default_realm
    injectors:
      env:
        KRB5_CONFIG: !unsafe "{{ tower.filename }}"
      file:
        template: !unsafe |-
          [libdefaults]
          default_realm = {{ default_realm | upper }}
          dns_canonicalize_hostname = fallback
          dns_lookup_kdc = {% if kdc %}false{% else %}true{% endif %}
          dns_lookup_realm = true
          forwardable = true
          rdns = false
          #udp_preference_limit = 1
          [realms]
          {{ default_realm | upper }} = {
            {% if kdc %}kdc = {{ kdc }}{% endif %}
          }
          [domain_realm]
            {{ default_realm | lower }} = {{ default_realm | upper }}
      extra_vars:
        ansible_user: !unsafe "{{ username }}"
        ansible_password: !unsafe "{{ password }}"

controller_credentials:
  - name: Automation Hub Container Registry
    organization: Test Org
    credential_type: Container Registry
    inputs:
      host: "{{ aap_hostname }}"
      username: "{{ aap_admin_username | default('admin') }}"
      password: "{{ aap_admin_password }}"
  - name: Test Org SCM Credential
    organization: Test Org
    credential_type: Source Control
    inputs:
      ssh_key_data: "{{ lookup('file', lookup('env', 'PWD') + '/id_ed25519.scm') }}"
      #ssh_key_unlock: "{{ ssh_key_passphrase | default(omit) }}"
  - name: Test Credential
    organization: Test Org
    credential_type: Machine
    inputs:
      username: "{{ test_machine_username | default('admin') }}"
      password: "{{ test_machine_password | default('Foobar_12') }}"
      #ssh_key_data: "{{ lookup('file', lookup('env', 'PWD') + '/id_ed25519.machine') }}"
      #ssh_key_unlock: "{{ ssh_key_passphrase | default(omit) }}"

controller_execution_environments:
  - name: Custom Base EE
    image: "{{ aap_hostname }}/custom/custom-base-rhel9"
    pull: always
    #pull: missing
    credential: Automation Hub Container Registry

controller_projects:
  - name: Test Project for Git Inventory
    description: Inventory project for testing
    organization: Test Org
    scm_type: git
    scm_url: https://github.com/myllynen/autotest.git
    #credential: Test Org SCM Credential
    scm_clean: true
    scm_update_on_launch: false
    #scm_update_cache_timeout: "30"
    update_project: true

  - name: Test Project
    description: Project for testing
    organization: Test Org
    default_environment: Custom Base EE
    scm_type: git
    scm_url: https://github.com/myllynen/misc.git
    #credential: Test Org SCM Credential
    scm_clean: true
    scm_update_on_launch: false
    #scm_update_cache_timeout: "30"
    update_project: true

controller_inventories:
  - name: Test Inventory
    description: Inventory for testing
    organization: Test Org

controller_inventory_sources:
  - name: Test Git Inventory Source
    description: Inventory Source for testing
    organization: Test Org
    execution_environment: Control Plane Execution Environment
    inventory: Test Inventory
    source: scm
    source_project: Test Project for Git Inventory
    source_path: inventory
    overwrite: true
    overwrite_vars: true
    verbosity: 2

controller_templates:
  - name: Test Job Template
    description: Job template for testing
    job_type: run
    organization: Test Org
    inventory: Test Inventory
    project: Test Project
    playbook: debug.yml
    #credentials: Test Credential
    limit: local
    verbosity: "0"

  - name: Test Random Failure
    description: Random failure for testing
    job_type: run
    organization: Test Org
    inventory: Test Inventory
    project: Test Project
    playbook: random_fail.yml
    #credentials: Test Credential
    limit: local
    verbosity: "0"
    extra_vars:
      message: This might fail

controller_workflows:
  - name: Test Workflow Job Template
    description: Workflow for testing
    organization: Test Org
    inventory: Test Inventory
    limit: local
    extra_vars:
      message: Message from workflow
    simplified_workflow_nodes:
      - identifier: node1
        all_parents_must_converge: false
        unified_job_template: Test Random Failure
        credentials: []
        success_nodes:
          - node10
        failure_nodes:
          - node20
        always_nodes: []
      - identifier: node10
        approval_node:
          name: Test Approval
          description: Approval step for testing
          timeout: 0
        success_nodes:
          - node11
      - identifier: node11
        unified_job_template: Test Job Template
      - identifier: node20
        unified_job_template: Test Random Failure
